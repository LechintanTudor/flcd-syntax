from grammar import Grammar
from parser import Parser


class Console:
    def __init__(self):
        self.grammar = Grammar()
        self.cmds = {
            "load": self.handle_load_file,
            "terminals": self.handle_terminals,
            "nonterminals": self.handle_nonterminals,
            "productions": self.handle_productions,
            "cancol": self.handle_cancol,
        }

    def handle_load_file(self):
        filename = input("Enter file name/relative path: ").strip()

        try:
            self.grammar.load_from_file(filename)
            print("File loaded successfully")
        except Exception as e:
            print(e)

    def handle_terminals(self):
        for term in self.grammar.get_terminals():
            print(term)

    def handle_nonterminals(self):
        for nonterm in self.grammar.get_non_terminals():
            print(nonterm)

    def handle_productions(self):
        non_terminal = input(
            "Enter nonterminal or press enter if you want to see all productions: "
        ).strip()
        if not non_terminal:
            for src, dst_list in self.grammar.get_productions().items():
                for dst in dst_list:
                    print(f"{src} -> {dst}")
        else:
            for dst in self.grammar.get_productions(non_terminal=non_terminal):
                print(f"{non_terminal} -> {dst}")

    def handle_cancol(self):
        non_terminal = input("Enter starting nonterminal: ").strip()

        if non_terminal not in self.grammar.get_non_terminals():
            print("Nonterminal not found in grammar")
            return

        parser = Parser(self.grammar, non_terminal)
        canonical_collection = parser.colcan()

        for src, dst in canonical_collection:
            print(f"{src} -> {dst}")

    def run(self):
        while True:
            self.print_menu()
            cmd = input("Enter your command: ")

            if cmd == "exit":
                break

            if cmd not in self.cmds:
                print("Invalid command\n")
                continue

            self.cmds[cmd]()
            print()

    def print_menu(self):
        print(
            "Commands:\n"
            "1. load - Load a grammar from a file\n"
            "2. terminals - See the terminals from the grammar\n"
            "3. nonterminals - See the nonterminals from the grammar\n"
            "4. productions - See the productions from the grammar\n"
            "5. cancol - See the canonical collection generated by the parser\n"
            "6. exit\n"
        )
